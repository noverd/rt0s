import numpy as np


def calculate_cpa(
    pos1: np.ndarray, vel1: np.ndarray, pos2: np.ndarray, vel2: np.ndarray
):
    """
    Рассчитывает точку минимального сближения (CPA) для двух объектов,
    движущихся с постоянной скоростью (линейная модель).

    Эта функция определяет время, в которое два объекта будут находиться на
    минимальном расстоянии друг от друга, и само это расстояние.

    Аргументы:
        pos1 (np.ndarray): Вектор начального положения первого объекта [x, y, z] в км.
        vel1 (np.ndarray): Вектор скорости первого объекта [vx, vy, vz] в км/с.
        pos2 (np.ndarray): Вектор начального положения второго объекта [x, y, z] в км.
        vel2 (np.ndarray): Вектор скорости второго объекта [vx, vy, vz] в км/с.

    Возвращает:
        dict: Словарь, содержащий:
            'time' (float): Время до минимального сближения (в секундах) от начального момента.
                            Может быть отрицательным, если CPA был в прошлом.
            'distance' (float): Минимальное расстояние сближения (в км).
    """
    # Относительный вектор положения и скорости
    relative_pos = pos1 - pos2
    relative_vel = vel1 - vel2

    # Скалярное произведение относительной скорости на саму себя (квадрат модуля скорости)
    vel_dot_vel = np.dot(relative_vel, relative_vel)

    # Если относительная скорость равна нулю, объекты не сближаются и не удаляются.
    # Расстояние между ними постоянно. Время до сближения условно 0.
    if vel_dot_vel < 1e-9:  # Используем малое число для сравнения с нулем
        return {"time": 0.0, "distance": np.linalg.norm(relative_pos)}

    # Время до минимального сближения (t_cpa) вычисляется по формуле:
    # t_cpa = - (относительное_положение . относительная_скорость) / (относительная_скорость . относительная_скорость)
    t_cpa = -np.dot(relative_pos, relative_vel) / vel_dot_vel

    # Рассчитываем вектор, соединяющий объекты в момент минимального сближения
    cpa_vector = relative_pos + t_cpa * relative_vel

    # Длина этого вектора и есть минимальное расстояние
    min_distance = np.linalg.norm(cpa_vector)

    return {"time": t_cpa, "distance": min_distance}